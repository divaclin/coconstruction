// Generated by CoffeeScript 1.9.0
(function() {
  $(function() {
    var Controller, DB, DEVICE_ID, Notification, Pad, Status, db, main, pad;
    DEVICE_ID = "A";
    Controller = (function() {
      var _track, _trackCallback;

      function Controller(_at_pad, _at_db, _at_notiController) {
        this.pad = _at_pad;
        this.db = _at_db;
        this.notiController = _at_notiController;
        this.building = void 0;
      }

      _track = function() {
        console.log("start tracking");
        return db.track(_trackCallback);
      };

      _trackCallback = function(data) {
        var status, _i, _len;
        console.log("tracked data : ", data);
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          status = data[_i];
          status = new Status(status);
          this.judge(status);
        }
        return setTimeout(_track, 800);
      };

      Controller.prototype.track = function() {
        return setTimeout(_track, 800);
      };

      Controller.prototype.judge = function(status) {
        var noti, string;
        if (status.isRead || status.isSelf) {
          return "nothing";
        }
        if (building && status.isDesk() && status.isBUILD_UP()) {
          this.buildUp(status);
          return string = "Build Up a building";
        } else {
          noti = new Notification(status);
          return pad.noti(noti);
        }
      };

      Controller.prototype.checkIn = function(bid) {
        pad.checkIn();
        return db.checkIn(["B", bid]);
      };

      Controller.prototype.buildUp = function(status) {
        if (status) {
          pad.buildUp(status);
          db.buildUp(status);
          return db.lookUp(status);
        } else {
          pad.buildUp();
          db.buildUp();
          return this.building = true;
        }
      };

      Controller.prototype.lookUp = function(group, identifier) {
        console.log ("lookup");
        return db.lookUp({
          behavior: "LOOK_UP",
          object: [group, identifier]
        });
      };

      return Controller;

    })();
    Status = (function() {
      function Status(data) {
        var attrname;
        for (attrname in data) {
          this[attrname] = data[attrname];
          this["event"] = this.judgeEvent(status);
        }
      }

      Status.prototype.isRead = function() {
        return this.done.indexof(deviceid) > 0;
      };

      Status.prototype.isSelf = function() {
        return this.device === deviceid;
      };

      Status.prototype.isPad = function() {
        return this.device === "A" || this.device === "B" || this.device === "C";
      };

      Status.prototype.isDesk = function() {
        return this.device === "D";
      };

      Status.prototype.isCHECK_IN = function() {
        return this.behavior === "CHECK_IN";
      };

      Status.prototype.isBUILD_UP = function() {
        return this.behavior === "BUILD_UP";
      };

      Status.prototype.isLOOK_UP = function() {
        return this.behavior === "LOOK_UP";
      };

      Status.prototype.judgeEvent = function(status) {
        if (status.isPad()) {
          if (status.isBUILD_UP() && status.object.length > 0) {
            return "otherPad.buildUp";
          }
          if (status.isLOOK_UP() && status.object.length === 0) {
            return "otherPad.building";
          }
          if (status.isCHECK_IN()) {
            return "otherPad.checkIn";
          }
          if (status.isLOOK_UP()) {
            return "otherPad.lookUp";
          }
        } else if (status.isDesk()) {
          if (status.isLOOK_UP()) {
            return "desk.lookUp";
          }
        }
      };

      return Status;

    })();
    DB = (function() {
      function DB() {}

      DB.prototype.pull = function(url, callback) {
        return $.get(url,callback).fail(function(jqXHR, textStatus, errorThrown){
          console.log(errorThrown);
        });
      };

      DB.prototype.push = function(url, data, callback) {
        console.log("push")

        return $.post(url, data).fail(function(jqXHR, textStatus, errorThrown){
          console.log(errorThrown)
        })
      };

      DB.prototype.clearStatus = function(status) {
        return this.push("data/clearStatus.php", status, function() {
          return console.log("Status " + status.statusid + " is deleted.");
        });
      };

      DB.prototype.markReadStatus = function(status) {
        return this.push("data/updateStatus.php", status, function() {
          return console.log("Status " + status.statusid + " is mark read.");
        });
      };

      DB.prototype.addStatus = function(data, callback) {
        console.log("db.addStatus");
        return this.push("data/addStatus.php", {
          deviceid: DEVICE_ID,
          behavior: data.behavior,
          object: data.object,
          time: new Date()
        },callback)
      };

      DB.prototype.buildUp = function(object, callback) {
        if (data) {
          return this.push("data/buildUp.php", object, callback);
        } else {
          return this.addStatus({
            behavior: "BUILD_UP",
            object: []
          }, callback);
        }
      };

      DB.prototype.checkIn = function(object, callback) {
        this.push("data/checkIn.php", data, callback);
        return this.addStatus({
          behavior: "CHECK_IN",
          object: object
        }, callback);
      };

      DB.prototype.lookUp = function(object, callback) {
        console.log("db.lookup")
        return this.addStatus(object, callback);
      };

      DB.prototype.track = function(callback) {
        return this.pull("data/pullStatus.php", callback);
      };

      return DB;

    })();
    Pad = (function() {
      function Pad(_at_id) {
        this.id = _at_id;
      }

      Pad.prototype.noti = function(noti) {};

      Pad.prototype.checkIn = function() {};

      Pad.prototype.buildUp = function() {};

      return Pad;

    })();
    Notification = (function() {
      function Notification(status) {
        var event, id, objString;
        objString = object2String(status.object);
        id = status.deviceid;
        event = status.event;
        obj;
        switch (event) {
          case "otherPad.building":
            ["平板" + id + "正在建造建築中！", "from" + id + " noClick", "url"];
            break;
          case "otherPad.buildUp":
            ["平板" + id + "建造了！", "from" + id + " toLookUp building", "url"];
            break;
          case "otherPad.checkIn":
            ["平板" + id + "入住了一棟建築物！", "from" + id + " toLookUp building", "url"];
            break;
          case "otherPad.lookUp":
            ["平板" + id + "正在查找建築！", "from" + id + " toLookUp building", "url"];
            break;
          case "desk.lookUp":
            ["桌上有一筆查詢", "from" + id + " toLookUp building", "url"];
        }
      }

      Notification.prototype.object2String = function(object) {
        switch (object[1]) {
          case "B":
            return "建築" + status.object[1];
          case "T":
            return "建築類型" + status.object[1];
          case "G":
            return "建築標簽" + status.object[1];
        }
      };

      return Notification;

    })();
    pad = new Pad();
    db = new DB();
    main = new Controller(pad, db);
    main.track();
    $(document).on("click", "toBuildUp", function(e) {
      return main.buildUp();
    });
    $(document).on("click", "toCheckIn", function(e) {
      var bid;
      bid = $(this).data("bid");
      return main.checkIn();
    });
    $(document).on("click", ".toLookUp.building", function(e) {
      var bid;
      bid = $(this).data("bid");
      console.log("clicked");
      return main.lookUp("B", bid);
    });
    $(document).on("click", ".toLookUp.type", function(e) {
      var type;
      type = $(this).data("type");
      return main.lookUp("T", type);
    });
    $(document).on("click", ".toLookUp.tag", function(e) {
      var tag;
      tag = $(this).data("tag");
      return main.lookUp("G", tag);
    });
    return $(document).on("click", ".noti", function(e) {
      var action;
      return action = $(this).data("action");
    });
  });

}).call(this);
